<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>chrisdev</title><link href="http://blog.chrisdev.com/" rel="alternate"></link><link href="http://blog.chrisdev.com/feeds/all-en.atom.xml" rel="self"></link><id>http://blog.chrisdev.com/</id><updated>2014-02-23T00:00:00-04:00</updated><entry><title>Book Review: Getting Started with Zurb Foundation 4 by Andrew D. Patterson</title><link href="http://blog.chrisdev.com/book-review-getting-started-with-zurb-foundation.html" rel="alternate"></link><updated>2014-02-23T00:00:00-04:00</updated><author><name>Christopher Clarke</name></author><id>tag:blog.chrisdev.com,2014-02-23:book-review-getting-started-with-zurb-foundation.html</id><summary type="html">&lt;p&gt;I was really looking forward to reviewing this book as I'm a big fan of &lt;a class="reference external" href="http://foundation.zurb.com"&gt;Zurb
Foundation&lt;/a&gt; as I think that it is by far the &lt;a class="reference external" href="http://responsive.vermilion.com/compare.php?framework=current"&gt;best&lt;/a&gt; responsive framework out
there. Indeed, at work here at &lt;a class="reference external" href="http://chrisdev.com"&gt;ChrisDev&lt;/a&gt;,  we use Foundation for all our web
based projects.&lt;/p&gt;
&lt;p&gt;The book is supposed to aimed at web architects, designers, and builders who
were already familiar with the basics principles of responsive design and
is divided up into four chapters. I found that
&lt;cite&gt;Chapter 1: Getting The Most from the Grid System&lt;/cite&gt; was the most useful of the
lot. The author discussed in some detail his approach
to dealing with a number of practical layout issues including: nesting rows in
columns; understanding and customizing column gutters; maintaining row and page
width; mobile first design (or what the author calls designing from small to to
large); rearranging columns and so on.  While I found that this chapter hit
all the basics I felt more emphasis should have been placed on the implications
of mobile first design as this has always been Foundation's big selling
point over rivals such as &lt;a class="reference external" href="http://getbootstrap.com"&gt;Twitter BootStrap&lt;/a&gt;.  Also, it was strange
that there was no mention of some of the great resources provided by Zurb such
as the &lt;a class="reference external" href="http://foundation.zurb.com/templates4.html"&gt;Foundation 4 Templates&lt;/a&gt; which provide a number of canned layouts for
various kinds of sites (blogs, marketing product page etc.) that can be a great
starting point for customizing layout.&lt;/p&gt;
&lt;p&gt;I was a little disappointed in the next two chapters which covered the CSS and
JavaScript components provided with Foundation. These seemed a little cursory and
there was little that went beyond the &lt;a class="reference external" href="http://docs.foundation.com"&gt;online documentation&lt;/a&gt;.
Of course Foundation comes with more than twenty CSS components about twelve
JavaScript Plugins so it would have been unrealistic to expect a comprehensive
treatment of all these components, but maybe the author could have singled out
the more popular component such as Orbit for more comprehensive treatment.&lt;/p&gt;
&lt;p&gt;The final chapter covered &lt;a class="reference external" href="http://sass-lang.com"&gt;Sass&lt;/a&gt;. I felt that there was a lot of good material
here and readers unfamiliar with Sass would find it quite enlightening.
I particularly liked the sections entitled &lt;em&gt;Customizing with Variables&lt;/em&gt; and
&lt;em&gt;Understanding functions and mixins&lt;/em&gt;. However, I felt that more emphasis should
have been placed on this topic given that Sass has become the most efficient
way to customize and style layout, components and plugins.  I would have
preferred if Sass could have been introduced very early on (probably as Chapter
2) and the subsequent chapters covering CSS and JavaScript components each
contain a section on how to customize one or more of the components or plugins
with Sass.&lt;/p&gt;
&lt;p&gt;Overall, I would have to give this book a 3 out of 5 stars since it covers the
basics and provides a good supplement for the &lt;a class="reference external" href="http://docs.foundation.com"&gt;online documentation&lt;/a&gt;. However,
I feel that for more experienced designers, architects and builders the book
will prove to be a bit of a disappointment. Aside from &lt;cite&gt;Chapter 1&lt;/cite&gt;, it provides
little in the way of a practical approach or even  some guidelines for building
real world responsive sites with Foundation.  This is important in the context
of a rapidly evolving framework like Zurb Foundation, where we are we are
reviewing a book about &lt;cite&gt;version 4&lt;/cite&gt; while &lt;a class="reference external" href="http://foundation.zurb.com/docs/changelog.html"&gt;Foundation 5&lt;/a&gt; has been out since
November 21, 2013.&lt;/p&gt;
</summary><category term="Zurb Foundation"></category><category term="book review"></category><category term="foundation 4"></category><category term="responsive"></category><category term="CSS"></category><category term="Sass"></category></entry><entry><title>Welcome To My Blog</title><link href="http://blog.chrisdev.com/welcome.html" rel="alternate"></link><updated>2013-05-01T00:00:00-04:00</updated><author><name>Christopher Clarke</name></author><id>tag:blog.chrisdev.com,2013-05-01:welcome.html</id><summary type="html">&lt;p&gt;I've started experimenting with a static blog in the hope that this will
encourage me to post on a more frequently . I've decided to go with
&lt;a class="reference external" href="https://github.com/getpelican/pelican"&gt;pelican&lt;/a&gt; as it's written in python, set up and has good documentation and
I'm using &lt;tt class="docutils literal"&gt;github pages&lt;/tt&gt; for hosting.&lt;/p&gt;
&lt;div class="section" id="getting-started"&gt;
&lt;h2&gt;Getting Started&lt;/h2&gt;
&lt;p&gt;First, I created a virtualenv for
the project and installed the main requirements.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;mkvirtualenv chrisdev-blog
pip install pelican
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I then used &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;pelican-quickstart&lt;/span&gt;&lt;/tt&gt; to create the skeleton of my project&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;pelican-quickstart
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Since I was going to host on Github I felt that I did not need the
generated Makefile, and all the other helper scripts.
Instead, I created a settings file that initially
looked like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;AUTHOR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Christopher Clarke&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;DEFAULT_DATE_FORMAT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;%A, %B &lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s"&gt;, %Y&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;DISQUS_SITENAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;chrisdev&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;GITHUB_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;https://github.com/chrisdev/chrisdev-blog&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;GOOGLE_ANALYTICS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;SITEURL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;http://blog.chrisdev.com&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;FEED_DOMAIN&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;SITEURL&lt;/span&gt;
&lt;span class="n"&gt;SITENAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;TheChrisDev Blog&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;SOCIAL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;twitter&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;http://twitter.com/realchrisdev&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;github&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;https://github.com/chrisdev&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;facebook&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;http://www.facebook.com/chrisdevtt&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),)&lt;/span&gt;
&lt;span class="n"&gt;TAG_FEED_ATOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;feeds/&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;.atom.xml&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;TIMEZONE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;America/Port_of_Spain&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;TWITTER_USERNAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;realchrisdev&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To generate the site I created a test &lt;tt class="docutils literal"&gt;rst&lt;/tt&gt; file in the content directory
and ran the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;pelican content -s settings.py -o .
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To view the generated site just open the index file in your browser or if you are
on a Mac&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;open index.html
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="theming-the-blog"&gt;
&lt;h2&gt;Theming The Blog&lt;/h2&gt;
&lt;p&gt;By default &lt;a class="reference external" href="https://github.com/getpelican/pelican"&gt;pelican&lt;/a&gt;  will theme your site using &lt;tt class="docutils literal"&gt;notmyidea&lt;/tt&gt;.
But I wanted to use a theme based on &lt;a class="reference external" href="http://foundation.zurb.com"&gt;Zurb Foundation 4&lt;/a&gt;.
Fortunately,  the official &lt;a class="reference external" href="https://github.com/getpelican/pelican-themes"&gt;pelican-themes&lt;/a&gt; repository already contained
a &lt;tt class="docutils literal"&gt;Foundation 4&lt;/tt&gt; theme called &lt;tt class="docutils literal"&gt;tuxlite_zf&lt;/tt&gt;.
This is a minimalist theme with a main column and a right sidebar.
That I felt would provide a good starting point for a custom theme.
To install the
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;pelican-themes&lt;/span&gt;&lt;/tt&gt; we simply cloned the repository to our local machine.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git clone https://github.com/getpelican/pelican-themes ~/Development/pelican-themes
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We then copied the &lt;tt class="docutils literal"&gt;tuxlite_zf&lt;/tt&gt; theme folder to a new folder  &lt;tt class="docutils literal"&gt;chrisdev_zf&lt;/tt&gt;
so that we could customize it. Next,  we edited  &lt;tt class="docutils literal"&gt;settings.py&lt;/tt&gt;
file to include this line:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;THEME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;../pelican-themes/chrisdev_zf&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Finall, we regenerated the site as before to confirm that &lt;tt class="docutils literal"&gt;tuxlite_zf&lt;/tt&gt; was
indeed generating a &lt;tt class="docutils literal"&gt;Foundation 4&lt;/tt&gt; site.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="customization-with-sass-and-compass"&gt;
&lt;h2&gt;Customization with SASS and Compass&lt;/h2&gt;
&lt;p&gt;The best way to customize a &lt;tt class="docutils literal"&gt;Foundation 4&lt;/tt&gt; site is to use
&lt;a class="reference external" href="http://sass-lang.com/"&gt;Sass&lt;/a&gt; and &lt;a class="reference external" href="http://compass-style.org"&gt;Compass&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This normally means that &lt;tt class="docutils literal"&gt;ruby&lt;/tt&gt; needs to be installed on your system.
If you are on a Mac then you are in luck since a fairly recent version of
&lt;tt class="docutils literal"&gt;ruby&lt;/tt&gt; ships with &lt;tt class="docutils literal"&gt;Mountain Lion&lt;/tt&gt;.
Update your &lt;tt class="docutils literal"&gt;ruby&lt;/tt&gt; installation and install &lt;tt class="docutils literal"&gt;Foundation 4&lt;/tt&gt; and all the
necessary dependencies i.e. &lt;a class="reference external" href="http://sass-lang.com/"&gt;Sass&lt;/a&gt; and &lt;a class="reference external" href="http://compass-style.org"&gt;Compass&lt;/a&gt; .&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo gem update --system
sudo gem install compass
sudo gem install zurb-foundation
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Next create a project for
your custom theme.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;compass create custom-foundation4 -r zurb-foundation --using foundation
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can view &lt;tt class="docutils literal"&gt;index.html&lt;/tt&gt; in your browser confirm that your project is
a standard &lt;tt class="docutils literal"&gt;Foundation 4&lt;/tt&gt; site. Next, you will want to start
by making changes to the &lt;tt class="docutils literal"&gt;Scsss&lt;/tt&gt; files and  use
with &lt;tt class="docutils literal"&gt;compass&lt;/tt&gt; to generate &lt;tt class="docutils literal"&gt;css&lt;/tt&gt; output.&lt;/p&gt;
&lt;p&gt;The Foundation folks have made this easy for us as you can
modify almost any Foundation &lt;tt class="docutils literal"&gt;CSS&lt;/tt&gt; component by editing &lt;tt class="docutils literal"&gt;_settings.scss&lt;/tt&gt;
file which is located in the &lt;tt class="docutils literal"&gt;sass&lt;/tt&gt;
folder of the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;custom-foundation&lt;/span&gt;&lt;/tt&gt; project.
For example, to change the colors of the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Top-nav&lt;/span&gt;&lt;/tt&gt; we made the following
changes to &lt;tt class="docutils literal"&gt;_settings.scss&lt;/tt&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="vg"&gt;$topbar&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dropdown&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="ss"&gt;bg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="c1"&gt;#3498db;&lt;/span&gt;
&lt;span class="vg"&gt;$topbar&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dropdown&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;toggle&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="ss"&gt;alpha&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="vg"&gt;$dropdown&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="ss"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="c1"&gt;#fff;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Next run&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;compass compile
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also set &lt;tt class="docutils literal"&gt;compass&lt;/tt&gt; in watch mode so that it
will watch for saves and compile each time you save an Scss file.
Additionally, you can also configure compass to generate compressed code
by editing the 'config.rb'
and uncommenting&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;output_style&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  :compressed &lt;span class="c"&gt;# or :compressed expanded or :nested or&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Once you are satisfied, you can copy &lt;tt class="docutils literal"&gt;app.css&lt;/tt&gt; as &lt;tt class="docutils literal"&gt;foundation.css&lt;/tt&gt; to your
custom pelican-theme's static directory.&lt;/p&gt;
&lt;p&gt;Once you have gained more experience with compass/sass you will want to
target particular CSS components to modify them instead of
regenerating the entire
&lt;tt class="docutils literal"&gt;foundation.css&lt;/tt&gt; every time you make a few changes to components.
To achieve this we
simply created a new &lt;tt class="docutils literal"&gt;scss&lt;/tt&gt; called &lt;tt class="docutils literal"&gt;style.scss&lt;/tt&gt; and imported just those
components that we wished to modify.
So as in the example above where we just wanted to change the
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;top-nav&lt;/span&gt;&lt;/tt&gt; colors we just add the following lines to  &lt;tt class="docutils literal"&gt;style.sccs&lt;/tt&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="vg"&gt;$topbar&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dropdown&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="ss"&gt;bg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="c1"&gt;#3498db;&lt;/span&gt;
&lt;span class="vg"&gt;$topbar&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dropdown&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;toggle&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="ss"&gt;alpha&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="vg"&gt;$dropdown&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="ss"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="c1"&gt;#fff;&lt;/span&gt;

&lt;span class="vi"&gt;@import&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;foundation/components/grid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="vi"&gt;@import&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;foundation/components/top-bar&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note, you need to define the new colors etc. &lt;strong&gt;before&lt;/strong&gt; you
import the foundation components.&lt;/p&gt;
&lt;p&gt;As before, compile the  &lt;tt class="docutils literal"&gt;style.css&lt;/tt&gt; and copy this
to the static directory of your pelican theme.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="deployment-on-github"&gt;
&lt;h2&gt;Deployment On Github&lt;/h2&gt;
&lt;p&gt;I started by creating a repository on my &lt;a class="reference external" href="http://github.com"&gt;github&lt;/a&gt;
called &lt;tt class="docutils literal"&gt;chrisdev.github.com&lt;/tt&gt;.
The use of my &lt;tt class="docutils literal"&gt;github&lt;/tt&gt; account name as the first part of the
repository name was necessary to indicate that this was a special repository
for serving &lt;tt class="docutils literal"&gt;User&lt;/tt&gt; or &lt;tt class="docutils literal"&gt;Organization&lt;/tt&gt; html pages from the master branch of a
repository. The site would be viewable at &lt;a class="reference external" href="http://chrisdev.github.io"&gt;http://chrisdev.github.io&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Next in the the directory where I created the pelican blog I ran the followig&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git init
git add .
git commit -m &lt;span class="s2"&gt;&amp;quot;initial commit&amp;quot;&lt;/span&gt;
git remote add origin git@github.com:chrisdev/chrisdev.github.com.git
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To update the site I just have to push to the origin&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git push -u origin master
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I also set up a custom domain for the blog at &lt;a class="reference external" href="http://blog.chrisdev.com"&gt;http://blog.chrisdev.com&lt;/a&gt;
by simply setting up a &lt;tt class="docutils literal"&gt;CNAME&lt;/tt&gt; record in my DNS
to set  &lt;tt class="docutils literal"&gt;blog.chrisdev.com&lt;/tt&gt; as an alias for &lt;tt class="docutils literal"&gt;chrisdev.github.com&lt;/tt&gt;.
I also had to add a file to the &lt;tt class="docutils literal"&gt;github&lt;/tt&gt; repository  called
&lt;tt class="docutils literal"&gt;CNAME&lt;/tt&gt; which contained
a sigle line with the alias i.e  &lt;tt class="docutils literal"&gt;blog.chrisdev.com&lt;/tt&gt;.&lt;/p&gt;
&lt;/div&gt;
</summary><category term="static-site"></category><category term="pelican"></category><category term="foundation4"></category><category term="compass"></category><category term="sass"></category></entry></feed>